name: Trivy IaC Security Scan

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  trivy-iac-scan:
    name: Trivy IaC Security Scan
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Store dismissed alerts for smart reopening
      uses: actions/github-script@v7
      continue-on-error: true
      with:
        script: |
          try {
            const alerts = await github.rest.codeScanning.listAlertsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'dismissed'
            });
            
            console.log(`Found ${alerts.data.length} dismissed alerts to track`);
            
            // Store dismissed alert info for later comparison
            const dismissedAlerts = alerts.data.map(alert => ({
              number: alert.number,
              rule_id: alert.rule.id,
              location: alert.most_recent_instance?.location?.path,
              description: alert.rule.description || alert.rule.id
            }));
            
            // Store in environment for later steps
            require('fs').writeFileSync('dismissed-alerts.json', JSON.stringify(dismissedAlerts, null, 2));
            console.log('Stored dismissed alerts info for smart reopening');
          } catch (error) {
            console.log('Error storing dismissed alerts info:', error.message);
          }

    - name: Run Trivy IaC scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'config'
        scan-ref: 'example_app/learn-terraform-provision-eks-cluster'
        format: 'sarif'
        output: 'trivy-iac-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'
        exit-code: '0'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-iac-results.sarif'
        category: 'trivy-iac-scan-${{ github.run_number }}'

    - name: Smart reopen of relevant dismissed alerts
      uses: actions/github-script@v7
      continue-on-error: true
      if: always()
      with:
        script: |
          try {
            const fs = require('fs');
            
            // Check if we have stored dismissed alerts
            if (!fs.existsSync('dismissed-alerts.json')) {
              console.log('No dismissed alerts to check');
              return;
            }
            
            const dismissedAlerts = JSON.parse(fs.readFileSync('dismissed-alerts.json', 'utf8'));
            console.log(`Checking ${dismissedAlerts.length} dismissed alerts against new scan results`);
            
            // Get current alerts after new scan
            const currentAlerts = await github.rest.codeScanning.listAlertsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });
            
            // Find dismissed alerts that match current findings
            let reopenedCount = 0;
            for (const dismissedAlert of dismissedAlerts) {
              const matchingCurrentAlert = currentAlerts.data.find(current => 
                current.rule.id === dismissedAlert.rule_id &&
                current.most_recent_instance?.location?.path === dismissedAlert.location
              );
              
              if (matchingCurrentAlert) {
                console.log(`Found matching issue for dismissed alert #${dismissedAlert.number}: ${dismissedAlert.description}`);
                reopenedCount++;
              } else {
                console.log(`Dismissed alert #${dismissedAlert.number} was actually fixed: ${dismissedAlert.description}`);
              }
            }
            
            console.log(`Smart reopening result: ${reopenedCount} alerts should be reopened out of ${dismissedAlerts.length} dismissed alerts`);
            
          } catch (error) {
            console.log('Error in smart alert reopening:', error.message);
          }

    - name: Run Trivy IaC scan (table format)
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'config'
        scan-ref: 'example_app/learn-terraform-provision-eks-cluster'
        format: 'table'
        severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'
        output: 'trivy-iac-results.txt'

    - name: Display scan results
      if: always()
      run: |
        echo "=== Trivy IaC Scan Results ==="
        if [ -f trivy-iac-results.txt ]; then
          cat trivy-iac-results.txt
        else
          echo "No IaC security issues found!"
        fi

    - name: Archive scan results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: trivy-iac-scan-results
        path: |
          trivy-iac-results.sarif
          trivy-iac-results.txt
        retention-days: 30
